{"version":3,"sources":["components/video_item/video_item.module.css","components/search_header/search_header.module.css","components/video_list/video_list.module.css","components/video_item/video_item.jsx","components/video_list/video_list.jsx","components/search_header/search_header.jsx","app.jsx","reportWebVitals.js","index.js","service/youtube.js"],"names":["module","exports","VideoItem","video","snippet","onVideoClick","className","styles","container","onClick","thumbnails","src","medium","url","alt","metadata","title","channel","channelTitle","VideoList","videos","map","id","SearchHeader","onSearch","inputRef","useRef","handleSearch","value","current","header","logo","img","ref","input","type","placeholder","onKeyPress","onkeypress","button","App","youtube","useState","setVideos","selectedVideo","setSelectedVideo","useEffect","mostPopular","then","app","query","search","content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","key","this","getRequestOptions","method","redirect","fetch","response","json","result","items","requestOptions","item","videoId","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.217bc233.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"video_item_container__3-8iN\",\"video\":\"video_item_video__3mhi1\",\"thumbnail\":\"video_item_thumbnail__3T4Qp\",\"metadata\":\"video_item_metadata__1Ojyf\",\"title\":\"video_item_title__1DQfh\",\"channel\":\"video_item_channel__3cm6E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"search_header_header__37TLi\",\"logo\":\"search_header_logo__36fCM\",\"input\":\"search_header_input__18qW3\",\"button\":\"search_header_button__Z4Cus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videos\":\"video_list_videos__H55It\"};","import React from \"react\";\r\nimport styles from \"./video_item.module.css\";\r\n\r\nconst VideoItem = ({ video, video: { snippet }, onVideoClick }) => (\r\n  <li className={styles.container} onClick={() => onVideoClick(video)}>\r\n    <div className={styles.video}>\r\n      <img\r\n        className={styles.thumbnails}\r\n        src={ snippet.thumbnails.medium.url}\r\n        alt=\"video thumbnail\"\r\n      />\r\n      <div className={styles.metadata}>\r\n        <p className={styles.title}>{snippet.title}</p>\r\n        <p className={styles.channel}>{snippet.channelTitle} </p>\r\n      </div>\r\n    </div>\r\n  </li>\r\n);\r\n\r\nexport default VideoItem;\r\n","import React from \"react\";\r\nimport VideoItem from \"../video_item/video_item\";\r\nimport styles from \"./video_list.module.css\";\r\n\r\nconst VideoList = ({ videos, onVideoClick }) => (\r\n  <ul className={styles.videos}>\r\n    {videos.map((video) => (\r\n      <VideoItem key={video.id} video={video} onVideoClick={onVideoClick} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default VideoList;\r\n","import styles from \"./search_header.module.css\";\r\nimport React, { useRef } from \"react\";\r\n\r\nconst SearchHeader = ({ onSearch }) => {\r\n  const inputRef = useRef();\r\n  const handleSearch = () => {\r\n    const value = inputRef.current.value;\r\n    onSearch(value);\r\n  };\r\n\r\n  const onClick = () => {\r\n    handleSearch();\r\n  };\r\n\r\n  const onKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.logo}>\r\n        <img className={styles.img} src=\"/images/logo.png\" alt=\"logo\" />\r\n        <h1 className={styles.title}>Youtube</h1>\r\n      </div>\r\n      <input\r\n        ref={inputRef}\r\n        className={styles.input}\r\n        type=\"search\"\r\n        placeholder=\"검색\"\r\n        onKeyPress={onkeypress}\r\n      />\r\n      <button className={styles.button} type=\"submit\" onClick={onClick}>\r\n        <img src=\"/images/search.png\" alt=\"search\" />\r\n      </button>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default SearchHeader;\r\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./app.module.css\";\nimport VideoList from \"./components/video_list/video_list\";\nimport SearchHeader from \"./components/search_header/search_header\";\n\nfunction App({ youtube }) {\n  // 1. video 의 목록을 가진 UseState API 사용\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const selectVideo = (video) => {\n    setSelectedVideo(video);\n  };\n  const search = (query) => {\n    youtube\n      .search(query) //\n      .then((videos) => setVideos(videos));\n  };\n\n  // 마운트가 되었거나 업데이트가 될 때 쓸 수있는 / 원하는 함수를 등록하면 컴포넌트가 마운트 되었거나 업데이트 될 때마다 호출\n  useEffect(() => {\n    youtube\n      .mostPopular() //\n      .then((videos) => setVideos(videos));\n  }, []); // 뒤에 빈 배열을 두번째 인자로 전달하면 마운트가 되었을 때만 호출\n  return (\n    <div className={styles.app}>\n      <SearchHeader onSearch={search} />\n      {\n        // selectedVideo가 있다면 videoDetail이라는 컴포넌트를 이용해서 비디오에 전달\n\n        <section className={styles.content}>\n          {selectedVideo && <VideoList video={selectedVideo} />}\n          <VideoList videos={videos} onVideoClick={selectVideo} />\n        </section>\n      }\n    </div>\n  );\n}\n\n// 컴포넌트가 마운트 되면 유행하는 videos를 받아와서 비동기적으로 setVideos라는 API를 이용해서 컴포넌트 데이터를 업데이트\n// 업데이트가 되면 videos를 video_list란 컴포넌트에 전달\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n\n ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Youtube from \"./service/youtube\";\n\nconst youtube = new Youtube(process.env.REACT_APP_YOTUBE_API_KEY);\nReactDOM.render(\n  <React.StrictMode>\n    <App youtube={youtube} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","class Youtube {\r\n  constructor(key) {\r\n    this.key = key;\r\n    this.getRequestOptions = {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n    };\r\n  }\r\n\r\n  mostPopular() {\r\n    return fetch(\r\n      `https://youtube.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=25&regionCode=kr&key=${this.key}`,\r\n      this.getRequestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => result.items); //setVideose를 받아온 result에 있는 items로 업데이트\r\n  }\r\n\r\n  search(query) {\r\n    return fetch(\r\n      `https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${query}&type=video&key=${this.key}`,\r\n      this.requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) =>\r\n        result.items.map((item) => ({ ...item, id: item.id.videoId }))\r\n      );\r\n  }\r\n}\r\n\r\nexport default Youtube;\r\n"],"sourceRoot":""}