{"version":3,"sources":["components/video_item/video_item.module.css","components/search_header/search_header.module.css","app.module.css","video_detail/video_detail.module.css","components/video_list/video_list.module.css","components/video_item/video_item.jsx","components/video_list/video_list.jsx","components/search_header/search_header.jsx","video_detail/video_detail.jsx","app.jsx","reportWebVitals.js","index.js","service/youtube.js"],"names":["module","exports","VideoItem","memo","video","snippet","onVideoClick","displayType","display","styles","list","grid","className","container","onClick","thumbnail","src","thumbnails","medium","url","alt","metadata","title","channel","channelTitle","VideoList","videos","map","id","SearchHeader","onSearch","inputRef","useRef","handleSearch","value","current","header","logo","img","ref","input","type","placeholder","onKeyPress","onkeypress","button","VideoDetail","detail","width","height","frameborder","allowfullscreen","description","App","youtube","useState","setVideos","selectedVideo","setSelectedVideo","useEffect","mostPopular","then","app","query","search","content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","key","this","getRequestOptions","method","redirect","fetch","response","json","result","items","requestOptions","item","videoId","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a1063aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"video_item_container__3-8iN\",\"grid\":\"video_item_grid__2dHMp\",\"list\":\"video_item_list__fKm8U\",\"video\":\"video_item_video__3mhi1\",\"thumbnail\":\"video_item_thumbnail__3T4Qp\",\"metadata\":\"video_item_metadata__1Ojyf\",\"title\":\"video_item_title__1DQfh\",\"channel\":\"video_item_channel__3cm6E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"search_header_header__37TLi\",\"logo\":\"search_header_logo__36fCM\",\"input\":\"search_header_input__18qW3\",\"button\":\"search_header_button__Z4Cus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__hSiwV\",\"content\":\"app_content__2kzlU\",\"detail\":\"app_detail__NKRt9\",\"list\":\"app_list__3LFho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail\":\"video_detail_detail__2bukH\",\"description\":\"video_detail_description__3zFa6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videos\":\"video_list_videos__H55It\"};","import React, { memo } from \"react\";\r\nimport styles from \"./video_item.module.css\";\r\n\r\nconst VideoItem = memo(\r\n  ({ video, video: { snippet }, onVideoClick, display }) => {\r\n    const displayType = display === \"list\" ? styles.list : styles.grid;\r\n    return (\r\n      <li\r\n        className={`${styles.container} ${displayType}`}\r\n        onClick={() => onVideoClick(video)}\r\n      >\r\n        <div className={styles.video}>\r\n          <img\r\n            className={styles.thumbnail}\r\n            src={snippet.thumbnails.medium.url}\r\n            alt=\"video thumbnail\"\r\n          />\r\n          <div className={styles.metadata}>\r\n            <p className={styles.title}>{snippet.title}</p>\r\n            <p className={styles.channel}>{snippet.channelTitle}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n);\r\n\r\nexport default VideoItem;\r\n","import React from \"react\";\r\nimport VideoItem from \"../video_item/video_item\";\r\nimport styles from \"./video_list.module.css\";\r\n\r\nconst VideoList = ({ videos, onVideoClick, display }) => (\r\n  <ul className={styles.videos}>\r\n    {videos.map((video) => (\r\n      <VideoItem\r\n        key={video.id}\r\n        video={video}\r\n        onVideoClick={onVideoClick}\r\n        display={display}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default VideoList;\r\n","import styles from \"./search_header.module.css\";\r\nimport React, { useRef, memo } from \"react\";\r\n\r\nconst SearchHeader = memo(({ onSearch }) => {\r\n  const inputRef = useRef();\r\n  const handleSearch = () => {\r\n    const value = inputRef.current.value;\r\n    onSearch(value);\r\n  };\r\n\r\n  const onClick = () => {\r\n    handleSearch();\r\n  };\r\n\r\n  const onKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.logo}>\r\n        <img className={styles.img} src=\"/images/logo.png\" alt=\"logo\" />\r\n        <h1 className={styles.title}>Youtube</h1>\r\n      </div>\r\n      <input\r\n        ref={inputRef}\r\n        className={styles.input}\r\n        type=\"search\"\r\n        placeholder=\"검색\"\r\n        onKeyPress={onkeypress}\r\n      />\r\n      <button className={styles.button} type=\"submit\" onClick={onClick}>\r\n        <img src=\"/images/search.png\" alt=\"search\" />\r\n      </button>\r\n    </header>\r\n  );\r\n});\r\nexport default SearchHeader;\r\n","import React from \"react\";\r\nimport styles from \"./video_detail.module.css\";\r\n\r\nconst VideoDetail = ({ video, video: { snippet } }) => (\r\n  <section className={styles.detail}>\r\n    <iframe\r\n      className={styles.video}\r\n      type=\"text/html\"\r\n      title=\"youtube video player\"\r\n      width=\"100%\"\r\n      height=\"500px\"\r\n      src={`https://www.youtube.com/embed/${video.id}`}\r\n      frameborder=\"0\"\r\n      allowfullscreen\r\n    ></iframe>\r\n    <h2>{snippet.title}</h2>\r\n    <h3>{snippet.channelTitle}</h3>\r\n    <pre className={styles.description}>{snippet.description}</pre>\r\n  </section>\r\n);\r\nexport default VideoDetail;\r\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./app.module.css\";\nimport VideoList from \"./components/video_list/video_list\";\nimport SearchHeader from \"./components/search_header/search_header\";\nimport VideoDetail from \"./video_detail/video_detail\";\n\nfunction App({ youtube }) {\n  // 1. video 의 목록을 가진 UseState API 사용\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  const selectVideo = (video) => {\n    setSelectedVideo(video);\n  };\n\n  const search = (query) => {\n    setSelectedVideo(null);\n    youtube\n      .search(query) //\n      .then((videos) => setVideos(videos));\n  };\n\n  // 마운트가 되었거나 업데이트가 될 때 쓸 수있는 / 원하는 함수를 등록하면 컴포넌트가 마운트 되었거나 업데이트 될 때마다 호출\n  useEffect(() => {\n    youtube\n      .mostPopular() //\n      .then((videos) => setVideos(videos));\n  }, [youtube]);\n  return (\n    <div className={styles.app}>\n      <SearchHeader onSearch={search} />\n      <section className={styles.content}>\n        {selectedVideo && (\n          <div className={styles.detail}>\n            <VideoDetail video={selectedVideo} />\n          </div>\n        )}\n        <div className={styles.list}>\n          <VideoList\n            videos={videos}\n            onVideoClick={selectVideo}\n            display={selectedVideo ? \"list\" : \"grid\"}\n          />\n        </div>\n      </section>\n    </div>\n  );\n}\n\n// 컴포넌트가 마운트 되면 유행하는 videos를 받아와서 비동기적으로 setVideos라는 API를 이용해서 컴포넌트 데이터를 업데이트\n// 업데이트가 되면 videos를 video_list란 컴포넌트에 전달\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n\n ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Youtube from \"./service/youtube\";\n\nconst youtube = new Youtube(process.env.REACT_APP_YOTUBE_API_KEY);\nReactDOM.render(\n  <React.StrictMode>\n    <App youtube={youtube} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","class Youtube {\r\n  constructor(key) {\r\n    this.key = key;\r\n    this.getRequestOptions = {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n    };\r\n  }\r\n\r\n  mostPopular() {\r\n    return fetch(\r\n      `https://youtube.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=25&regionCode=kr&key=${this.key}`,\r\n      this.getRequestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => result.items); //setVideose를 받아온 result에 있는 items로 업데이트\r\n  }\r\n\r\n  search(query) {\r\n    return fetch(\r\n      `https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${query}&type=video&key=${this.key}`,\r\n      this.requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) =>\r\n        result.items.map((item) => ({ ...item, id: item.id.videoId }))\r\n      );\r\n  }\r\n}\r\n\r\nexport default Youtube;\r\n"],"sourceRoot":""}